services:
  db:
    image: postgres:16
    container_name: apicinema-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"


  rabbitmq:
    image: rabbitmq:3-management
    container_name: apicinema-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  pgadmin:
    image: dpage/pgadmin4
    container_name: apicinema-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db

  auth-api:
    build:
      context: .
      dockerfile: services/Auth/Auth.API/Dockerfile
    container_name: apicinema-auth-api
    ports:
      - "5001:80"
    depends_on:
      - db
      - rabbitmq
    environment:
      AUTH_DB_CONNECTION: Host=db;Port=5432;Database=auth;Username=postgres;Password=postgres
      RABBITMQ_URI: amqp://guest:guest@apicinema-rabbitmq:5672/
      JWT_SECRET: ClaveUltraSeguraYSecretaParaJWT2025!
      JWT_REFRESH_SECRET: OtroSecretoSuperLargoYSeguro123!
      JWT_ISSUER: api-cinema-auth
      JWT_EXPIRATION_MINUTES: 180
      JWT_REFRESH_EXPIRATION_DAYS: 7
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest

  users-api:
    build:
      context: .
      dockerfile: services/Users/Users.API/Dockerfile
    container_name: apicinema-users-api
    ports:
      - "5002:80"
    depends_on:
      - db
      - rabbitmq
    environment:
      AUTH_DB_CONNECTION: Host=db;Port=5432;Database=users;Username=postgres;Password=postgres
      RABBITMQ_URI: amqp://guest:guest@apicinema-rabbitmq:5672/
      JWT_SECRET: ClaveUltraSeguraYSecretaParaJWT2025!
      JWT_REFRESH_SECRET: OtroSecretoSuperLargoYSeguro123!
      JWT_ISSUER: api-cinema-auth
      JWT_EXPIRATION_MINUTES: 180
      JWT_REFRESH_EXPIRATION_DAYS: 7
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest

  movies-api:
    build:
      context: .
      dockerfile: services/Movies/Movies.API/Dockerfile
    container_name: apicinema-movies-api
    ports:
      - "5003:80"
    depends_on:
      - db
      - rabbitmq
    environment:
      AUTH_DB_CONNECTION: Host=db;Port=5432;Database=movies;Username=postgres;Password=postgres
      RABBITMQ_URI: amqp://guest:guest@apicinema-rabbitmq:5672/
      JWT_SECRET: ClaveUltraSeguraYSecretaParaJWT2025!
      JWT_REFRESH_SECRET: OtroSecretoSuperLargoYSeguro123!
      JWT_ISSUER: api-cinema-auth
      JWT_EXPIRATION_MINUTES: 180
      JWT_REFRESH_EXPIRATION_DAYS: 7
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest

  catalog-api:
    build:
      context: .
      dockerfile: services/Catalog/Catalog.API/Dockerfile
    container_name: apicinema-catalog-api
    ports:
      - "5004:80"
    depends_on:
      - db
      - rabbitmq
    environment:
      AUTH_DB_CONNECTION: Host=db;Port=5432;Database=catalog;Username=postgres;Password=postgres
      RABBITMQ_URI: amqp://guest:guest@apicinema-rabbitmq:5672/
      JWT_SECRET: ClaveUltraSeguraYSecretaParaJWT2025!
      JWT_REFRESH_SECRET: OtroSecretoSuperLargoYSeguro123!
      JWT_ISSUER: api-cinema-auth
      JWT_EXPIRATION_MINUTES: 180
      JWT_REFRESH_EXPIRATION_DAYS: 7
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest

  bookings-api:
    build:
      context: .
      dockerfile: services/Bookings/Bookings.API/Dockerfile
    container_name: apicinema-bookings-api
    ports:
      - "5005:80"
    depends_on:
      - db
      - rabbitmq
    environment:
      AUTH_DB_CONNECTION: Host=db;Port=5432;Database=bookings;Username=postgres;Password=postgres
      RABBITMQ_URI: amqp://guest:guest@apicinema-rabbitmq:5672/
      JWT_SECRET: ClaveUltraSeguraYSecretaParaJWT2025!
      JWT_REFRESH_SECRET: OtroSecretoSuperLargoYSeguro123!
      JWT_ISSUER: api-cinema-auth
      JWT_EXPIRATION_MINUTES: 180
      JWT_REFRESH_EXPIRATION_DAYS: 7
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest

  reviews-api:
    build:
      context: .
      dockerfile: services/Reviews/Reviews.API/Dockerfile
    container_name: apicinema-reviews-api
    ports:
      - "5006:80"
    depends_on:
      - db
      - rabbitmq
    environment:
      AUTH_DB_CONNECTION: Host=db;Port=5432;Database=reviews;Username=postgres;Password=postgres
      RABBITMQ_URI: amqp://guest:guest@apicinema-rabbitmq:5672/
      JWT_SECRET: ClaveUltraSeguraYSecretaParaJWT2025!
      JWT_REFRESH_SECRET: OtroSecretoSuperLargoYSeguro123!
      JWT_ISSUER: api-cinema-auth
      JWT_EXPIRATION_MINUTES: 180
      JWT_REFRESH_EXPIRATION_DAYS: 7
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest


  api-gateway:
    build:
      context: .
      dockerfile: gateway/API.Gateway/Dockerfile
    container_name: apicinema-api-gateway
    ports:
      - "5000:8080"
    depends_on:
      - auth-api
      - users-api
      - movies-api
      - catalog-api
      - bookings-api
      - reviews-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development

  frontend:
    build:
      context: ./services/Frontend/frontend-app
      dockerfile: DockerFile
    container_name: apicinema-frontend
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000

volumes:
  postgres_data:
